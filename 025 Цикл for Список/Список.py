# Обход по значениям
n=[22,33,44]
count = 1
for i in n:   #
    count+=1
    i+=5        # Допустим хотим увеличить на 5
    print('проход ', count, i) # сама переменная увеличивается на 5 но это не влияет на элементы списка
                            # Это потому-что в переменную i сохраняем значение этого элемента (дубль этого значения)
print(n)

# Обход по значениям  только тогда когда нужно просуммировать список , найти максимально и т д
# Огромный минус обход по  !!!! значениям !!! не можем изменять элементы и не значем на каких местах они стоят
# Номер индекса элемента
#a =[80,90,100,80]

#for i in a:
#    print(i ,a.index(i))   # программа перестанет правильно работать , метод index ищет наше значение i в самом начале списка

print()

# Обход по Индексу **** Предпочтительнее и нужнее использовать ******
a =[11,21,31]
for i in range(len(a)):
    print(i ,(a[i]))    # Выводим значение этого индекса 0,1,2,3,3
    a[i]+=5           # Увеличиваем каждый элемент списка на 5
    print(a)
print(a)
print(sum(a)) # Сумма всех элементов



a=[22,23,24,25,22]
b =[]
print(a)
# Проверка на дубли !  Тут нам не нужна информация об индексах , список a будем проходить по значениям
for i in a:
    if not i in b:    # ( провреим элемент i есть в списке b *** 1 in a есть ли 1 в списке a)
        b.append(i) # если в списке этого элемента нет то тогда в b добавляем этот элемент
print(b)

print()


a =[1,2,3,4,5,6,7,8,9,10]
chet =[]
nechet=[]
for i in range(len(a)):
    if a[i]%2==0:
        chet.append(i+1) # так как в питоне номерация начинается с 0 до добавляем еденичку
    else:
        nechet.append(i+1)
print(chet)
print(nechet)

s = 'H1ello Wor2№####lD'

for i in s: # обойти по значениям
    if i>='a'and i<='z':
        print(i,'smol')
    elif  i>='A'and i<='Z':
        print(i,'Big')



#Цикл for способен работать со строками, списками, кортежами, с другими встроенными объектами,
# поддерживающими возможность выполнения итераций.

