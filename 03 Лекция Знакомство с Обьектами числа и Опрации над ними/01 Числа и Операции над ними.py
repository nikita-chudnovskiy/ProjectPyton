# Программа это набор инструкций которые описывают
# компьютеру определенную последовательность действий
# В свою очередь каждая инструкция обрабатывает или создает обьекты
# ТИПЫ В PYTHON (в Python все является объектом)
# Целое число это число не содерж дробной части ...,-7,-6,1,0,1,3,9...,

print(5+6)      # результат это обьект типа   # int Складываются два объекта числа
print(2.0)      # результат это обьект типа   # float число с плавающей точкой 7.6 8.0
print('Andrey') # результат это обьект типа   # str
print(2>2)      # результат это обьект типа   # boolS
print(type(2>2))
print(max(1,2,3,4,5,abs(-56)))          # применяется abs потом max

# ОПЕРАЦИИ НАД ЧИСЛАМИ ( + - * / ** возведение в степень //- целочисленное % остаток от деления)

print(2+2,4+5) # целое число
print(2+3.0) # вещественное число
print (4.5-3)#вещественное
print (2*2) # целое
print (2*2.0)
print (2*3)
print(8/2,'Число с плавающей точкой') #Вещественное 4.0
print(2**3) #кого возводим в какую степень  ВОЗВЕДЕНИЕ В СТЕПЕНЬ Многократное увеличение числа на себя записывается **
print(11//2)#Деление на цело сколько раз 5 умещается
print(10//10) #0
print(19%7, 'Остаток 5')# Сколько раз максимально 7 умещ в 19  ( 2 раза по 7 и того нужно прибавить 5)
print(2%7) # 0 раз по 7 ответом будет 2

# ПРИОРИТЕТ ОПЕРАЦИЙ ВАЖНО
''' (в скобках)                 2*(5+2) = 14
    ** возведение в степень     3*2**3 = 24
    * / // %                    6/3*5 = 10    ОДИНАКОВЫЙ ПРИОРИТЕТ выполняются с лева на право !
    + -                         2+3-1 = 4     ОДИНАКОВЫЙ ПРИОРИТЕТ
    пример                      74%10*5 = 20  ОДИНАКОВЫЙ ПРИОРИТЕТ остаток от деления 4*5
'''
#    ОДИНАКОВЫЙ ПРИОРИТЕТ выполняются с лева на право !
print(8/2*2)
print(74%10*5)
print(74*10%5,'Какой')


# ВСТРОЕННЫЕ МАТЕМАТИЧЕСКИЕ ФУНКЦИИ ПО РАБОТЕ С ЦЕЛЫМИ ЧИСЛАМИ
print(abs(-7))          # отбрасывает знак
print(abs(-5*2))        # вначале выполнится действие потом отбросится знак
print(min(1,2,3,4,5))
print(max(1,2,3,4,5))
print(pow(2,3))         # принимает 2 значения и возводит первое в степень второго
print(round(3.4))       # Округление по ум до целого числа
print(round(3.5))
print(round(3.456,2))   # если хотим округлить по сотые то указываем 2
print(round(3.456,1))   # по десятые , 1 число после ,
print(round(456,-1))    # Округление к 10
print(round(456,-2))    # Округление к 100


# Округление # match.floor(), math.ceil(), math.ceil()
import math
a =5.65
print('Округление')
print(round(a)) # округление как в большую так и в меньшую 5.65 будет 6 (4.5 -будет 5)
print(math.floor(a)) # Округление в меньшую
print(math.ceil(a)) # Округление в большую сторону
print(math.pi) #Точнность ограничивается вещественным числом в PYTHON
f =25
print(math.sqrt(f),'Корень')
print(math.factorial(f))


# Отрицательные числа  минус на - дает +
i = (-7 + 2) * (-4)
print(i)
# i = i/0; print(i) # division by zero  на 0 делить нельзя

i= 9.86500; print(i)    #9.865   # НУЛИ ОТБРАСЫВАЮТСЯ  Помним об ЭТОМ часто приводит к ошибкам
i = 6 * 7; print(i)     #42
i = 4 + 1.65; print(i)  #5.65

# ОПЕРАЦИИ НА МЕСТЕ
x = 2
x += 3;  print(x)       #  / - * / % Возможно с другими операциями
x *= 3;  print(x)
x **= 3; print(x)       # 15 в 3 степени

# Операции на месте могут применяться и к другим типам данных, например к строкам
x = 'spamm'
print(x)
x += 'egg'
print(x)
print(len(x)) # len() узнать длинну строки