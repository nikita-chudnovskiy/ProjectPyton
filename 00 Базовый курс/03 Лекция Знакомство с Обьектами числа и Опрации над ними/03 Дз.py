import math
a = -7
print(abs(a))
print(round(5.3))
print(round(5.5))
print(round(5.565,2)) # Округление 2 знаков после,

d1,d2,d3 = map(int,input().split()) # разделяет ввод по пробелу

print(max(d1,d2,d3))
print(min(d1,d2,d3))

a = 3
b = 4
# евклидового расстояния (гипотенузы)
z =(a**2)+(b**2)
print(math.sqrt(z))


import math

"""Сочетания
Далее на повестке дня — сочетания. Вам наверняка любопытно, что это такое
и в чем их отличие от перестановок. Начнем с определения:

Сочетание— это выбор значений из набора, в котором (в отличие от перестановок)
порядок выбора не имеет значения.

Чтобы понять это определение, разберем следующий пример: группа людей,
выбранных в команду — это та же самая группа, независимо от порядка участников.
Вот и вся идея сочетаний. Если выбрать 5 членов команды, можно упорядочить их 
по имени, росту или другому параметру, но команда останется прежней — порядок не 
имеет значения.

Давайте запишем это формулой. Количество сочетаний C набора из n объектов, 
взятых по r, рассчитывается так:"""

def zzz(n,k):
    return math.factorial(n)//(math.factorial(k)*(math.factorial(n-k)))
z =zzz(6,3)
print(z)

n, k = map(int, input().split())
cn =(math.factorial(n)//(math.factorial(k)*math.factorial(n-k)))
print(cn)

# В случае с модулем math вернется число, а вот в SymPy — формула.
# Для рендеринга математических символов в формате LaTeX код SymPy, используйте Jupyter notebook:

#  n дети m вожатые (40 ,5) сколько надо автобусов
n =40
m = 5
z= (n+m)/20
print(math.ceil(z))

# Ручки если подешевели на 10% сколько можно купить на 500 р если 1 стоила 20
x =20
y =500/100*10
total = (500+y)/x
print(math.floor(total))