a = 'a' + 'b' ;print(a) #3+5=8
b = -5; print(b) #50-30=20
c = 2 * 3;print(c) #2*3=6   'La'*3 =LaLaLa
d = 3 ** 4;print (d) #3*3*3=81   Возведение в степень
e = 4 / 3;print(e) # Возвращает частное от деления
f = 4 // 3;print(f) # Возвращает не полное частное от деления
g = 8 % 3;print(g ) #"возвращает остаток от деления"  2  -25.5 % 2.25 = 1,5

h = 2 << 2;print(h) # 2 << 2 даст 8 . В двоичном виде 2 представляет собой 10 .Сдвиг влево на 2 бита даёт1000 , что в десятичном виде означает 8 .
i = 11 >> 1;print(i) # 11 >> 1 даст 5 . В двоичномвиде 11 представляется как1011 , что будучи смещённымна 1 бит вправо, даёт 101 , а это,в свою очередь, ни что иноекак десятичное 5

j = 5 & 3;print(j) #Побитовая операция И над числами            1
k = 5 | 3;print(k) # Побитовая операция ИЛИ над числами         7
l = 5 ^ 3;print(l)# Побитовая операцияИСКЛЮЧИТЕЛЬНО ИЛИ         6
m = ~5;print(m) #Побитовая операция НЕ для числа x соответствует -(x+1) ~5 даёт -6
n = 3<5;print(n) #True

o = 3>5;print(o) #False
p = 3<=3;print(p)#True
q = 3>=2;print(q) #True

r = 2==2;print(r) #True
s  = 2!=2;print(s)#False



print((9 > 7) and (2 < 4))  # Оба выражения истинны (True)           Логи-ческое И    Оператор and оценивает выражение как истинное только тогда, когда оба компонента истинны.
print((8 == 8) or (6 != 6)) # Одно из выражений истинно (True)       Логи-ческое  ИЛИ
print(not(3 <= 1))          # Выражение ложно (False)   значит True  Логи-ческое НЕ


print('{0:_^11} '.format('Никита'))




